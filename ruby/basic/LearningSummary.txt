Lesson2
  コンソールに表示
    p：データの形式が分かるように表示
    puts：改行あり表示
    print：改行なし表示

Lesson3
  変数：英小文字から始まる
    ex.message,hensu
  定数：英大文字から始まる(全部大文字のことが多い)
    ex.MESSAGE,HENSU

Lesson4
  オブジェクト：データ
  メソッド：クラス
    ex.文字列クラス→String

Lesson5
  数値オブジェクト
    四則演算(+-*/%)
    四捨五入：round
    自己代入
      ex.x+=1

Lesson6
  文字列オブジェクト
    文字列代入は、囲うものによって、できることが変わる
      "(ダブルクォーテーション):変数展開・特殊文字(改行・タブ等)使用可能
        ex.name = "test"
           str = "Hello\t World\n,#{name}"
          \tはタブとして、\nは改行として出力される
          #{name}には、定義されているname変数の中身が表示される
          よって表示される文字列は
          Hello(タブ)World
          ,test
          となる
      '(シングルクォーテーション)："と同じことはできない
         ex.name = "test"
           str = 'Hello\t World\n,#{name}'
          \t、\n、#{name}はそのまま出力される
          よって表示される文字列は
          Hello\t World\n,#{name}
          となる

Lesson7
  メソッド
    破壊的メソッド
      語尾に「!」が付いているメソッド
      メソッドの処理を変数に上書きする
      ex.Stringクラスのupcaseメソッド
          str = "test"
          puts str
          str.upcase!
          puts str

          表示は
          test
          TEST
          となる
    真偽値を返すメソッド
      語尾に「?」が付いているメソッド
      結果をtrueかfalseで返却する
      ex.Stringクラスのemptyメソッド
         str = ""
         puts str.empty?
         str = "test"
         puts str.empty?

         表示は
         true
         false
         となる

Lesson8,9
  配列オブジェクト
    定義方法
      array = [5,8,4]
    取得方法
      array[0]  添え字(0からスタート)を指定
      array[0..2]  0から2までを取得
      array[0...2]  0から2未満を取得
      array[-1] 最後の要素取得
      array[1,2]  1番目から2つ分取得
    その他
      array[0...2] = [1,2]  0から2未満を書き換える
      array[1,0] = [10,11,12] 1のところを0個分入れ替える
      array[0,2] = [] 0から2個分を配列に
      array.size  要素数
      array.sort ソート
      array.sort.reberse  逆順ソート
      array.push(100)  要素追加
      array << 1000 << 1234 要素追加ショートカット
  
      
